@use 'sass:color';
@use 'variables' as *;
@use 'mixins' as *;

@import url('https://fonts.googleapis.com/css2?family=Kosugi+Maru&family=M+PLUS+Rounded+1c:wght@400;700&display=swap');

body {
  font-family: 'M PLUS Rounded 1c', 'Kosugi Maru', sans-serif;
  background: linear-gradient(135deg, $bg-primary 0%, #FFE0EC 50%, #E1F5FE 100%);
  min-height: 100vh;
  position: relative;
  
  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      radial-gradient(circle at 20% 30%, rgba(255, 126, 185, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, rgba(197, 137, 232, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 50% 50%, rgba(255, 210, 63, 0.05) 0%, transparent 70%);
    pointer-events: none;
    z-index: -1;
  }
}

.title-decoration {
  position: relative;
  
  &::before,
  &::after {
    content: '✨';
    position: absolute;
    font-size: 1.5rem;
    animation: sparkle 2s ease-in-out infinite;
  }
  
  &::before {
    left: -30px;
    animation-delay: 0s;
  }
  
  &::after {
    right: -30px;
    animation-delay: 1s;
  }
}

input[type="number"] {
  -moz-appearance: textfield;
  
  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

.container {
  label {
    font-size: $font-xs !important;
    color: $text-primary;
    white-space: nowrap;
  }

  input, select {
    @include form-control;
    font-size: $font-xs !important;
  }

  input:not([type="number"]), select {
    text-align: center;
  }

  input[type="number"] {
    text-align: right;
  }

  select {
    @include text-truncate;
  }
}

@mixin position-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin apply-span-styles {
  > label:nth-child(3),
  > label:nth-child(6) {
    text-align: right;
  }
  
  > span:nth-child(4) {
    @include form-control;
    text-align: right;
    
    // 非入力デザイン
    background-color: rgba($bg-secondary, 0.3);
    border-color: $border-light;
    cursor: not-allowed;
    color: $text-primary;
    
    // hover無効化
    &:focus {
      border-color: $border-light;
      box-shadow: 0 2px 8px rgba(255, 126, 185, 0.1);
      transform: none;
    }
  }
  
  // 増分
  > span:nth-child(3),
  > span:nth-child(5),
  > span:nth-child(8) {
    @include text-accent;
  }
}

@mixin dynamic-grid {
  display: grid;
  gap: $grid-gap;
  align-items: center;
  
  &:has(> :nth-child(8)) {
    grid-template-columns: $grid-label-width $grid-input-width $grid-label-width-sm $grid-input-width $grid-display-width $grid-label-width-sm $grid-input-width $grid-display-width-sm;
  }
  
  &:has(> :nth-child(3)):not(:has(> :nth-child(4))) {
    grid-template-columns: $grid-label-width $grid-input-width $grid-display-width-sm;
  }
}

// 攻撃レイアウト
@mixin attack-grid-layout {
  display: grid;
  grid-template-columns: $grid-label-width $grid-input-width $grid-label-width-sm $grid-input-width $grid-display-width $grid-label-width-sm $grid-input-width $grid-display-width-sm;
  grid-template-rows: auto auto;
  gap: $grid-gap;
  row-gap: $spacing-2;
  align-items: center;
  
  @for $i from 1 through 10 {
    > :nth-child(#{$i}) {
      @if $i <= 5 {
        grid-column: $i;
        grid-row: 1;
      } @else {
        grid-column: $i - 5;
        grid-row: 2;
      }
    }
  }
  
  // 最後の3要素（%、入力、増分）は2行にまたがる
  > :nth-child(11) { grid-column: 6; grid-row: 1 / 3; align-self: center; }
  > :nth-child(12) { grid-column: 7; grid-row: 1 / 3; align-self: center; }
  > :nth-child(13) { grid-column: 8; grid-row: 1 / 3; align-self: center; }
  
  > label:nth-child(3),
  > label:nth-child(8),
  > label:nth-child(11) {
    text-align: right;
  }
  
  > span:nth-child(4),
  > span:nth-child(9) {
    @include form-control;
    text-align: right;
    
    background-color: rgba($bg-secondary, 0.3);
    border-color: $border-light;
    cursor: not-allowed;
    color: $text-primary;
    
    &:focus {
      border-color: $border-light;
      box-shadow: 0 2px 8px rgba(255, 126, 185, 0.1);
      transform: none;
    }
  }
  
  > span:nth-child(5),
  > span:nth-child(10),
  > span:nth-child(13) {
    @include text-accent;
  }
}

@mixin skill-input-grid {
  display: grid;
  grid-template-columns: 3rem 2rem 3.5rem 2rem 3.5rem;
  gap: $spacing-1;
  align-items: center;
  
  label {
    text-align: center;
  }
}

@mixin setting-grid($label-width: 3rem, $suffix: false) {
  display: grid;
  grid-template-columns: $label-width minmax(0, 1fr) #{if($suffix, auto, '')};
  gap: $spacing-2;
  align-items: center;
}

@mixin truncate-select {
  @include text-truncate;
  max-width: 100%;
  min-width: 0;
  
  option {
    @include text-truncate;
    max-width: 100%;
  }
}

@mixin animated-card {
  @include card-base;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  animation: slideInDown 0.5s ease-out;
  
  &:hover {
    transform: translateY(-3px) rotate(1deg);
    box-shadow: 0 15px 35px rgba($accent, 0.2);
  }
  
  @for $i from 1 through 4 {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * 0.1}s;
    }
  }
}

@mixin dropzone-style {
  background: linear-gradient(135deg, rgba(white, 0.9), $bg-secondary);
  border: 3px dashed $border-default !important;
  border-radius: $border-radius-lg;
  transition: all 0.3s ease;
  
  &:hover {
    background: linear-gradient(135deg, $bg-secondary, $bg-tertiary);
    border-color: $accent !important;
    transform: scale(1.02);
  }
}

@mixin ripple-effect {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    @include position-center;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(white, 0.5);
    transition: width 0.6s, height 0.6s;
  }
  
  &:active::before {
    width: 300px;
    height: 300px;
  }
}

@mixin gradient-border {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    inset: -2px;
    background: linear-gradient(45deg, $accent, $purple, $warning, $success);
    border-radius: inherit;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  &:hover::after {
    opacity: 0.3;
  }
}

@mixin card-gradient {
  background: linear-gradient(135deg, rgba(white, 0.95), $bg-secondary);
  border: 2px solid $border-light;
  box-shadow: 0 5px 15px rgba($accent, 0.1);
}

.input-group {
  @include dynamic-grid;
  @include apply-span-styles;
}

.hp-value-setting {
  display: grid;
  grid-template-columns: 27.25rem 5.5rem;
  gap: $grid-gap;
  align-items: center;
  
  label {
    text-align: right;
  }
}

.setting-row.with-suffix span {
  @include text-label;
}

.recognized-input {
  border-color: $accent !important;
  animation: pulse 0.5s ease-out;
}

.tab-button {
  @include tab-button;
}

.attack-stats-grid {
  @include attack-grid-layout;
}

.section-divider {
  @include section-divider;
}

.damage-card {
  @include animated-card;
}

.skill-select {
  @include text-truncate;
  max-width: 100%;
  
  option {
    @include text-truncate;
    max-width: 100%;
  }
}

.setting-row {
  @include setting-grid;
  margin-bottom: 0.75rem;
  
  &:last-child {
    margin-bottom: 0;
  }
  
  &.enemy {
    grid-template-columns: 3.5rem minmax(0, 1fr);
  }
  
  &.with-suffix {
    grid-template-columns: 3rem minmax(0, 1fr) auto;
  }
}

.skill-multi-input {
  @include skill-input-grid;
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  25% { transform: translateY(-10px) rotate(-5deg); }
  75% { transform: translateY(-10px) rotate(5deg); }
}

@keyframes sparkle {
  0%, 100% { 
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
  50% { 
    opacity: 0.5;
    transform: scale(1.2) rotate(180deg);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse {
  0%, 100% { box-shadow: 0 0 0 0 rgba($accent, 0.4); }
  70% { box-shadow: 0 0 0 10px rgba($accent, 0); }
}

.dropzone {
  @include dropzone-style;
}

#copy {
  background: linear-gradient(135deg, #4FC3F7 0%, $purple 100%) !important;
  color: white !important;
  border: none !important;
  box-shadow: 0 4px 15px rgba($purple, 0.3) !important;
  transition: all 0.3s ease !important;
  
  &:hover {
    background: linear-gradient(135deg, #29B6F6 0%, color.adjust($purple, $lightness: -10%) 100%) !important;
    transform: translateY(-2px) !important;
    box-shadow: 0 6px 20px rgba($purple, 0.4) !important;
  }
  
  &:active {
    transform: translateY(0) !important;
    box-shadow: 0 2px 10px rgba($purple, 0.3) !important;
  }
}

@include print-styles {
  body {
    background: white;
    color: black;
  }
  
  .bg-bg-secondary {
    background: #f5f5f5;
    border: 1px solid #ccc;
  }
  
  #copy,
  label[for="file-input"],
  .mascot-container {
    display: none;
  }
}
